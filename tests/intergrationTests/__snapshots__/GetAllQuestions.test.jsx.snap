// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<GetAllQuestions /> should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GetAllQuestions
    getAll={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    loading={false}
    questions={
      Array [
        Object {
          "body": "",
          "title": "",
        },
      ]
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Questions
        </h2>,
        Array [
          <div>
            <div
              className="card border-primary mb-3"
            >
              <div
                className="card-body"
              >
                <Link
                  replace={false}
                  to={
                    Object {
                      "pathname": "/question/undefined",
                    }
                  }
                >
                  <h4
                    className="card-title"
                  />
                </Link>
                <p
                  className="card-text"
                />
              </div>
            </div>
          </div>,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Questions",
        },
        "ref": null,
        "rendered": "Questions",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="card border-primary mb-3"
          >
            <div
              className="card-body"
            >
              <Link
                replace={false}
                to={
                  Object {
                    "pathname": "/question/undefined",
                  }
                }
              >
                <h4
                  className="card-title"
                />
              </Link>
              <p
                className="card-text"
              />
            </div>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="card-body"
            >
              <Link
                replace={false}
                to={
                  Object {
                    "pathname": "/question/undefined",
                  }
                }
              >
                <h4
                  className="card-title"
                />
              </Link>
              <p
                className="card-text"
              />
            </div>,
            "className": "card border-primary mb-3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  replace={false}
                  to={
                    Object {
                      "pathname": "/question/undefined",
                    }
                  }
                >
                  <h4
                    className="card-title"
                  />
                </Link>,
                <p
                  className="card-text"
                />,
              ],
              "className": "card-body",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <h4
                    className="card-title"
                  />,
                  "replace": false,
                  "to": Object {
                    "pathname": "/question/undefined",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "card-title",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "h4",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "card-text",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Questions
          </h2>,
          Array [
            <div>
              <div
                className="card border-primary mb-3"
              >
                <div
                  className="card-body"
                >
                  <Link
                    replace={false}
                    to={
                      Object {
                        "pathname": "/question/undefined",
                      }
                    }
                  >
                    <h4
                      className="card-title"
                    />
                  </Link>
                  <p
                    className="card-text"
                  />
                </div>
              </div>
            </div>,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Questions",
          },
          "ref": null,
          "rendered": "Questions",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="card border-primary mb-3"
            >
              <div
                className="card-body"
              >
                <Link
                  replace={false}
                  to={
                    Object {
                      "pathname": "/question/undefined",
                    }
                  }
                >
                  <h4
                    className="card-title"
                  />
                </Link>
                <p
                  className="card-text"
                />
              </div>
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="card-body"
              >
                <Link
                  replace={false}
                  to={
                    Object {
                      "pathname": "/question/undefined",
                    }
                  }
                >
                  <h4
                    className="card-title"
                  />
                </Link>
                <p
                  className="card-text"
                />
              </div>,
              "className": "card border-primary mb-3",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    replace={false}
                    to={
                      Object {
                        "pathname": "/question/undefined",
                      }
                    }
                  >
                    <h4
                      className="card-title"
                    />
                  </Link>,
                  <p
                    className="card-text"
                  />,
                ],
                "className": "card-body",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h4
                      className="card-title"
                    />,
                    "replace": false,
                    "to": Object {
                      "pathname": "/question/undefined",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                      "className": "card-title",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "h4",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "card-text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
